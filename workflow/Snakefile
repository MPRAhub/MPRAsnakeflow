#################
#### imports ####
#################
import pandas as pd

##################
#### SETTINGS ####
##################

##### check snakemake min version #####
from snakemake.utils import min_version

min_version("7.2.1")

##### load config and sample sheets #####
from snakemake.utils import validate


# configfile: "config/config.yaml"


validate(config, schema="schemas/config.schema.yaml")


##### report workflow #####
report: "report/workflow.rst"


##### General wirldcard constrains #####
wildcard_constraints:
    project="[^/]+",
    assignment="[^/]+",
    condition="[^/_]+",
    replicate="[^/_]+",


##### localrules #####
localrules:
    all,
    aggregate_demultiplex,


# common workflow
include: "rules/common.smk"


###################
#### ALL RULES ####
###################


rule all:
    input:
        ## assignments
        getAssignmentConfig_helper(
            "results/assignment/{assignment}/assignment_barcodes_incl_other.{config}.sorted.tsv.gz",
        ),
        getAssignment_helper(
            "results/assignment/{assignment}/stats/assignment/bam_stats.txt",
        ),
        ## experiments
        # stats BC nucleotide composition
        getOutputProjectConditionReplicateType_helper(
            "results/experiments/{project}/stats/counts/BCNucleotideComposition/{condition}_{replicate}_{type}.tsv.gz"
        ),
        # barcode stats
        expand(
            "results/experiments/{project}/stats/statistic_count_{countType}.tsv",
            project=getProjects(),
            countType=["raw", "filtered"],
        ),
        # counts stats
        getOutputProjectConditionReplicateType_helper(
            "results/experiments/{project}/stats/counts/freqUMIs_{condition}_{replicate}_{type}.txt"
        ),
        getOutputProjectConfig_helper(
            "results/experiments/{project}/stats/statistic_bc_correlation_merged_{config}.tsv",
            True,
        ),
        getOutputProjectAssignmentConfig_helper(
            "results/experiments/{project}/stats/statistic_assigned_bc_correlation_merged_{assignment}_{config}.tsv",
            True,
        ),
        getOutputProjectConfig_helper(
            "results/experiments/{project}/stats/statistic_overlapBCs_counts_{config}.tsv",
            True,
        ),
        # assignment
        getOutputProjectConditionAssignmentConfig_helper(
            "results/experiments/{project}/assigned_counts/{assignment}/{config}/{condition}_allreps_merged.tsv.gz"
        ),
        # assignment stats
        getOutputProjectAssignmentConfig_helper(
            "results/experiments/{project}/stats/statistic_assigned_counts_merged_{assignment}_{config}.tsv"
        ),
        getOutputProjectAssignmentConfig_helper(
            "results/experiments/{project}/stats/statistic_oligo_correlation_merged_{assignment}_{config}.tsv",
            True,
        ),
        getOutputProjectAssignmentConfig_helper(
            "results/experiments/{project}/stats/statistic_assigned_counts_single_{assignment}_{config}.tsv",
            True,
        ),
        getOutputProjectAssignmentConfig_helper(
            "results/experiments/{project}/stats/statistic_overlapBCs_assigned_counts_{assignment}_{config}.tsv",
            True,
        ),
        # variants
        getOutputVariants_helper(
            "results/experiments/{project}/stats/variants/{assignment}/{config}/correlation_variantTable.tsv",
            True,
        ),
        getOutputVariants_helper(
            "results/experiments/{project}/variants/{assignment}/{config}/{condition}_variantTable.tsv.gz",
            False,
        ),


rule all_assignments:
    input:
        getAssignmentConfig_helper(
            "results/assignment/{assignment}/assignment_barcodes_incl_other.{config}.sorted.tsv.gz",
        ),
        getAssignment_helper(
            "results/assignment/{assignment}/stats/assignment/bam_stats.txt",
        ),


rule all_experiments:
    input:
        # stats BC nucleotide composition
        getOutputProjectConditionReplicateType_helper(
            "results/experiments/{project}/stats/counts/BCNucleotideComposition/{condition}_{replicate}_{type}.tsv.gz"
        ),
        # counts
        getOutputProjectConditionReplicateType_helper(
            "results/experiments/{project}/counts/{condition}_{replicate}_{type}.bam",
            skip={"demultiplex": True},
        ),
        getOutputProjectConditionReplicateType_helper(
            "results/experiments/{project}/counts/{condition}_{replicate}_{type}_final_counts.tsv.gz"
        ),
        # barcode stats
        expand(
            "results/experiments/{project}/stats/statistic_count_{countType}.tsv",
            project=getProjects(),
            countType=["raw", "filtered"],
        ),
        # counts stats
        getOutputProjectConditionReplicateType_helper(
            "results/experiments/{project}/stats/counts/freqUMIs_{condition}_{replicate}_{type}.txt"
        ),
        getOutputProjectConfig_helper(
            "results/experiments/{project}/stats/statistic_bc_correlation_merged_{config}.tsv",
            True,
        ),
        getOutputProjectAssignmentConfig_helper(
            "results/experiments/{project}/stats/statistic_assigned_bc_correlation_merged_{assignment}_{config}.tsv",
            True,
        ),
        getOutputProjectConfig_helper(
            "results/experiments/{project}/stats/statistic_overlapBCs_counts_{config}.tsv",
            True,
        ),
        # assignment
        getOutputProjectConditionAssignmentConfig_helper(
            "results/experiments/{project}/assigned_counts/{assignment}/{config}/{condition}_allreps_merged.tsv.gz"
        ),
        # assignment stats
        getOutputProjectAssignmentConfig_helper(
            "results/experiments/{project}/stats/statistic_assigned_counts_merged_{assignment}_{config}.tsv"
        ),
        getOutputProjectAssignmentConfig_helper(
            "results/experiments/{project}/stats/statistic_oligo_correlation_merged_{assignment}_{config}.tsv",
            True,
        ),
        getOutputProjectAssignmentConfig_helper(
            "results/experiments/{project}/stats/statistic_assigned_counts_single_{assignment}_{config}.tsv",
            True,
        ),
        getOutputProjectAssignmentConfig_helper(
            "results/experiments/{project}/stats/statistic_overlapBCs_assigned_counts_{assignment}_{config}.tsv",
            True,
        ),
        # variants
        getOutputVariants_helper(
            "results/experiments/{project}/stats/variants/{assignment}/{config}/correlation_variantTable.tsv",
            True,
        ),


rule all_experiments_counts_stats:
    input:
        getOutputProjectConditionReplicateType_helper(
            "results/experiments/{project}/stats/counts/freqUMIs_{condition}_{replicate}_{type}.txt"
        ),
        getOutputProjectConfig_helper(
            "results/experiments/{project}/stats/statistic_bc_correlation_merged_{config}.tsv",
            True,
        ),
        getOutputProjectConfig_helper(
            "results/experiments/{project}/stats/statistic_overlapBCs_counts_{config}.tsv",
            True,
        ),


rule all_experiments_assignments:
    input:
        getOutputProjectConditionAssignmentConfig_helper(
            "results/experiments/{project}/assigned_counts/{assignment}/{config}/{condition}_allreps_merged.tsv.gz"
        ),


rule all_experiments_assignments_stats:
    input:
        getOutputProjectAssignmentConfig_helper(
            "results/experiments/{project}/stats/statistic_assigned_counts_merged_{assignment}_{config}.tsv"
        ),
        getOutputProjectAssignmentConfig_helper(
            "results/experiments/{project}/stats/statistic_oligo_correlation_merged_{assignment}_{config}.tsv",
            True,
        ),
        getOutputProjectAssignmentConfig_helper(
            "results/experiments/{project}/stats/statistic_assigned_counts_single_{assignment}_{config}.tsv",
            True,
        ),
        getOutputProjectAssignmentConfig_helper(
            "results/experiments/{project}/stats/statistic_overlapBCs_assigned_counts_{assignment}_{config}.tsv",
            True,
        ),


rule all_stats_BCNucleotideComposition:
    input:
        getOutputProjectConditionReplicateType_helper(
            "results/experiments/{project}/stats/counts/BCNucleotideComposition/{condition}_{replicate}_{type}.tsv.gz"
        ),

rule all_variants:
    input:
        getOutputVariants_helper(
            "results/experiments/{project}/stats/variants/{assignment}/{config}/correlation_variantTable.tsv",
            True,
        ),
        getOutputVariants_helper(
            "results/experiments/{project}/variants/{assignment}/{config}/{condition}_variantTable.tsv.gz",
            False,
        ),

###################
## SUB-WORKFLOWS ##
###################


# assignment workflow
include: "rules/assignment.smk"
# count workflow
include: "rules/counts.smk"
# assignimg BCs to oligos
include: "rules/assigned_counts.smk"
# all statistics
include: "rules/statistic.smk"
# variant subworkflow (creating variant effects)
include: "rules/variants.smk"
